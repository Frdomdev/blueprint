// Copyright 2016 Palantir Technologies, Inc. All rights reserved.
// Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy
// of the license at https://github.com/palantir/blueprint/blob/master/LICENSE
// and https://github.com/palantir/blueprint/blob/master/PATENTS

@import "../../common/variables";

.pt-skeleton {
  border-radius: 2px;
  background-color: rgba($gray1, 0.2);
  width: 100%;
  height: $pt-grid-size * 0.6;

  // negative animation delay ensures animations are synced
  animation: ($pt-transition-duration * 20) linear ($pt-transition-duration * -70) infinite glow;

  & + & {
    margin-top: $pt-grid-size;
  }
}

@keyframes glow {
  0% {
    background-color: rgba($gray4, 0.2);
  }

  50% {
    background-color: rgba($gray1, 0.2);
  }

  100% {
    background-color: rgba($gray4, 0.2);
  }
}

/*
Skeleton

Skeletons allow you to show a loading state that mimics the shape of your yet-to-load content.

<div class="pt-callout pt-intent-warning pt-icon-warning-sign">
  <h5>Note</h5>
  Skeletons need to be placed within some sort of parent element to render properly. In the following examples, they are
  rendered inside of [`Card`](#components.card) components. Take care to render this component in an appropriate container.
</div>

Weight: 0

Styleguide components.progress.skeleton
*/

/*
CSS API

The API only provides styles for the `.pt-skeleton` class. It does not magically cover your content. If you want to achieve a
1:1 visual mapping of skeletons to your expected content layout, you must take care to render the proper number of skeletons with
your desired width, position, etc.

Markup:
<div class="pt-card docs-skeleton-example">
  <div class="pt-skeleton"></div>
  <div class="pt-skeleton"></div>
  <div class="pt-skeleton"></div>
</div>

Styleguide components.progress.skeleton.css
*/
